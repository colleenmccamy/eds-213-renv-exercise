##### TABLE
# table interpretation - treatment increases with X
# when x = 1 where d = 1 this is the mean Y_diff is delta hat 1 and this increases as x increases simulated for treatment x to increase as Y increases
# treatement effect is different with a high value of x vs. low value of x
# w_ATE is the weight - always equal to 0.2 and ensured that 20% of population has an x = 1,2,3,4,5 had the numers of each the same
# w_ATT tells us that there is 6% of the treatment group that has a value of x = 1
#MULTIVARIATE MATCHING ESTIMATES OF ATE AND ATT
ATE=sum((TIA_table$w_ATE)*(TIA_table$Y_diff)) # THIS IS THE AVERAGE TREATMENT EFFECT
ATE
ATT=sum((TIA_table$w_ATT)*(TIA_table$Y_diff)) # AVERAGE TREATMENT EFFECT ON THE TREATED is not controlled in this case we made D = 1 more likely as x > greater
ATT
# Approach 2 with grouping data ########### will output a less pretty table with more inuitive steps
#MANIPULATE DATA
TIA_table2 <- TIA_DATA %>%
mutate(Y = ifelse(D==1, Y1,Y0))%>% #Create observed Y variable
group_by(X,D)%>%
summarise(n_obs = n(),
Y_mean= mean(Y, na.rm = T))%>% #Calculate number of observations and Y mean by X by treatment cells
ungroup()%>%
mutate(total_obs = sum(n_obs))%>% #Calculate total number of observations
group_by(D)%>%
mutate(total_obs_d = sum(n_obs))%>% #Calculate total number of observations by treatment cells
group_by(X)%>%
mutate(Y_diff = lead(Y_mean)-Y_mean,
W_ATE = sum(n_obs)/total_obs,
W_ATT = lead(n_obs)/lead(total_obs_d))%>% #Calculate difference in outcome and ATE and ATT weights by X
ungroup()%>%
mutate(ATE=sum(W_ATE*Y_diff, na.rm= T),
ATT=sum(W_ATT*Y_diff, na.rm= T))%>% #Calculate ATE and ATT
mutate_if(is.numeric, round, 2) #Round data
TIA_table2
#
#MULTIVARIATE MATCHING ESTIMATES OF ATE AND ATT
ATE=unique(TIA_table2$ATE)
ATE
ATT=unique(TIA_table2$ATT)
ATT
# MULTIVARIATE MATCHING AS REGRESSION ESTIMATOR
reg_ate <- lm(formula = Y ~ D + X2 + X3 + X4 + X5, data=TIA_DATA)
se_models = starprep(reg_ate, stat = c("std.error"), se_type = "HC2", alpha = 0.05)
stargazer(reg_ate, se = se_models, type="text")
# not exactly the same 1.52 for D; gamma 2, 3, 4 are conditional on the treatment effect are the difference in outcomes that have a value of
# informative about the degree of selection - we can see high values of x have high value of y = 0
smoke_0 <- split(smoke_dat_binary, f = smoke_dat_binary$tobacco)
smoke_split <- split(smoke_dat_binary, f = smoke_dat_binary$tobacco)
smoke_split
smoke_0 <- smoke_split$`0`
smoke_1 <- smoke_split$`1`
smoke_hot0 <- recipe(birthwgt ~., data = smoke_0) |>
step_dummy(all_predictors(), one_hot = TRUE) |>
prep() |>
bake()
smoke_rec_0 <- recipe(birthwgt ~., data = smoke_0) |>
step_dummy(all_predictors(), one_hot = TRUE) |>
prep(smoke_0)
smoke_hot0 <- bake(smoke_rec_0, new_data = NULL)
smoke_hot0
smoke_dummy <- smoke_dat_binary |>
mutate(X = case_when(tobacco == 1 & alcohol = 1 & mblack == 0 & mage == 0 & meduc == 0 ~ 1, 0))
TIA_DATA
smoke_dat_indicator <- smoke_dat_binary |>
mutate(indicator = paste0(alcohol, mblack, mage, meduc))
smoke_dat_indicator
smoke_dat_indicator <- smoke_dat_binary |>
mutate(indicator = paste0(alcohol, mblack, mage, meduc)) |>
mutate(indicator = as.factor(indicator))
smoke_dat_indicator
class(smoke_dat_indicator$indicator)
?levels
smoke_dat_indicator <- smoke_dat_binary |>
mutate(indicator = paste0(alcohol, mblack, mage, meduc)) |>
mutate(indicator = as.factor(indicator)) |>
mutate(x = levels(indicator))
smoke_dat_indicator <- smoke_dat_binary |>
mutate(indicator = paste0(alcohol, mblack, mage, meduc)) |>
mutate(indicator = as.factor(indicator)) |>
mutate(x = levels(unique(indicator)))
smoke_dat_indicator$indicator <- factor(smoke_dat_indicator$indicator,
levels = unique(smoke_dat_indicator$indicator))
# creating table with weights per characteristic
smoke_table <- smoke_dat_indicator |>
mutate(Y = birthwgt) |>
group_by(indicator, tobacco) |>
summarise(n_obs = n(),
Y_mean = mean(Y, na.rm = TRUE)) |>
gather(variables, values, n_obs:Y_mean) |>
mutate(variables = paste0(variables, "_", tobacco, sep = "")) |>
pivot_wider(id_cols = meduc, names_from = variables, values_from = values) |>
ungroup() |>
mutate(Y_diff = Y_mean_1 - Y_mean_0, #calculate Y_diff
w_ATE = (n_obs_0+n_obs_1)/(sum(n_obs_0)+sum(n_obs_1)),
w_ATT = n_obs_1/sum(n_obs_1))%>% #calculate weights
mutate_if(is.numeric, round, 2)
# creating table with weights per characteristic
smoke_table <- smoke_dat_indicator |>
mutate(Y = birthwgt) |>
group_by(indicator, tobacco) |>
summarise(n_obs = n(),
Y_mean = mean(Y, na.rm = TRUE)) |>
gather(variables, values, n_obs:Y_mean) |>
mutate(variables = paste0(variables, "_", tobacco, sep = "")) |>
pivot_wider(id_cols = indicator, names_from = variables, values_from = values) |>
ungroup() |>
mutate(Y_diff = Y_mean_1 - Y_mean_0, #calculate Y_diff
w_ATE = (n_obs_0+n_obs_1)/(sum(n_obs_0)+sum(n_obs_1)),
w_ATT = n_obs_1/sum(n_obs_1))%>% #calculate weights
mutate_if(is.numeric, round, 2)
smoke_table
# making it into an easy viewed table
stargazer(smoke_table, type= "text", summary = FALSE, digits = 2)
# calculating the average treatment effect using the matching metric
ATE=sum((smoke_table$w_ATE)*(smoketable$Y_diff))
# calculating the average treatment effect using the matching metric
ATE <- sum((smoke_table$w_ATE)*(smoke_table$Y_diff))
ATE
print(paste0("The average treatement effect  of maternal smoking on birth weight is ", round(ATE, 2), " when looking at the following covariates: age of mother, mother's education, if the mother is black or not, and if the mother consumed alcohol during pregnancy."))
model_est <- lm(formula = birthwgt ~ .,
data = smoke_dat_binary)
model_est <- lm(formula = birthwgt ~ indicator,
data = smoke_dat_indicator)
model_ind <- lm(formula = birthwgt ~ indicator,
data = smoke_dat_indicator)
summary(model_ind)
model_ind <- lm(formula = birthwgt ~ tobacco + indicator,
data = smoke_dat_indicator)
summary(model_ind)
model_est <- lm(formula = birthwgt ~ .,
data = smoke_dat_binary)
summary(model_est)
model_ind <- lm_robust(formula = birthwgt ~ tobacco + indicator,
data = smoke_dat_indicator)
model_est <- lm_robust(formula = birthwgt ~ .,
data = smoke_dat_binary)
model_ind <- lm_robust(formula = birthwgt ~ tobacco + indicator,
data = smoke_dat_indicator)
model_est <- lm_robust(formula = birthwgt ~ .,
data = smoke_dat_binary)
summary(model_est)
summary(model_ind)
### creating the model
model_birthtobacco <- lm(formula = birthwgt ~ tobacco, data = smoke_dat)
# adding it to stargazer
se_model_bt <- starprep(model_birthtobacco,
stat = c("std.error"),
se_type = "HC2", # using HC2 to match lm_robust
alpha = 0.05)
# printing the table
stargazer(se_model_bt, se = se_model_bt, type = "text")
print(paste0("The undajusted mean difference between mothers who smoked vs. mothers who didn't smoke while pregnant is ", round(mean_diff_unadjust, 2), " in grams."))
### creating the model
model_birthtobacco <- lm(formula = birthwgt ~ tobacco, data = smoke_dat)
summary(model_birthtobacco)
install.packages("gtsummary")
install.packages("gtsummary")
library(gtsummary)
tbl_summary(model_birthtobacco)
install.packages("sjPlot")
library(sjPlot)
sjt.lm(model_birthtobacco)
library(sjmisc)
library(sjlabelled)
tab_model(model_birthtobacco)
### creating the model
model_birthtobacco <- lm_robust(formula = birthwgt ~ tobacco, data = smoke_dat)
### creating the model
model_birthtobacco <- lm(formula = birthwgt ~ tobacco, data = smoke_dat)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control)
# running the model for all predictors with lm_robust to look at the standard errors
model_lin_control <- lm(formula = birthwgt ~ .,
data = smoke_dat)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control)
# running the model for all predictors with lm_robust to look at the standard errors
model_lin_control <- lm_robust(formula = birthwgt ~ .,
data = smoke_dat)
library(estimatr)
### creating the model
model_birthtobacco <- lm_robust(formula = birthwgt ~ tobacco, data = smoke_dat)
tab_model(model_birthtobacco)
# running the model for all predictors with lm_robust to look at the standard errors
model_lin_control <- lm_robust(formula = birthwgt ~ .,
data = smoke_dat)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control, show.se = TRUE)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
show.se = TRUE,
show.ci = FALSE)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
terms = tobacco[1]
show.se = TRUE,
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
terms = tobacco[1],
show.se = TRUE,
show.ci = FALSE)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
terms = "tobacco[1]",
show.se = TRUE,
show.ci = FALSE)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
terms = "tobacco",
show.se = TRUE,
show.ci = FALSE)
tab_model(model_birthtobacco,
show.ci = FALSE)
tab_model(model_birthtobacco,
show.ci = FALSE,
show.intercept = FALSE)
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
show.se = TRUE,
show.ci = FALSE,
show.intercept = FALSE)
# printing a formatted model table
tab_model(model_est)
# printing a formatted model table
tab_model(model_est,
show.se = TRUE,
show.intercept = FALSE,
show.ci = FALSE)
# tobacco and birthweight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#bb83de") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
library(tidyverse)
library(janitor)
library(ggplot2)
library(reshape2)
library(estimatr)
library(stargazer)
library(ggplot2)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(estimatr)
# tobacco and birthweight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#bb83de") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# alochol and birthweight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#83b8de") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
ggplot(smoke_dat, aes(x=as.factor(mage), y = birthwgt)) +
geom_boxplot(fill="#83b8de") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#83b8de") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#f5a249") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# alcohol and birth weight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#83b8de") +
labs(x = "Alcohol Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#fb8500") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# alcohol and birth weight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#023047") +
labs(x = "Alcohol Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#219ebc") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#6d6875") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# alcohol and birth weight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#b5838d") +
labs(x = "Alcohol Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#e5989b") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#81b29a") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# alcohol and birth weight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#e07a5f") +
labs(x = "Alcohol Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#3d405b") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#3d405b",
col = "f4f1de") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#3d405b",
col = "#f4f1de") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#3d405b",
col = "#e07a5f") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#3d405b",
col = "#2f3e46") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#81b29a",
col = "#2f3e46") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#c7f9cc",
col = "#2f3e46") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# alcohol and birth weight
ggplot(smoke_dat, aes(x=as.factor(alcohol), y=birthwgt)) +
geom_boxplot(fill="#e07a5f",
col = "#2f3e46") +
labs(x = "Alcohol Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# first child and birth weight
ggplot(smoke_dat, aes(x=as.factor(first), y = birthwgt)) +
geom_boxplot(fill="#81b29a",
col = "#2f3e46") +
labs(x = "First Child",
y = "Average Birth Weight (g)",
title = "Distribution of First Child and Birth Weight")+
theme_minimal()
install.packages("cobalt")
library(cobalt)
View(smoke_dat)
bal.tab(birthwght ~ ., data = smoke_dat,
weights = "att.weights",
distance = "p.score")
bal.tab(birthwgt ~ ., data = smoke_dat,
weights = "att.weights",
distance = "p.score")
bal.tab(birthwgt ~ ., data = smoke_dat,
weights = "att.weights")
bal.tab(birthwgt ~ ., data = smoke_dat)
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#c7f9cc",
col = "#2f3e46") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# tobacco and birth weight
ggplot(smoke_dat, aes(x=as.factor(tobacco), y=birthwgt)) +
geom_boxplot(fill="#c7f9cc",
col = "#2f3e46") +
labs(x = "Tobacco Consumption While Pregnant",
y = "Average Birth Weight (g)")+
theme_minimal()
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
show.se = TRUE,
show.ci = FALSE,
show.intercept = FALSE,
file = "test.html")
# looking at the effects for tobacco with covariates controlled
tab_model(model_lin_control,
show.se = TRUE,
show.ci = FALSE,
show.intercept = FALSE,
file = "/Users/colleenmccamy/Documents/MEDS/classes/winter/eds_232_machine_learning/test.html")
summary(model_lin_control)
summary(model_est)
summary(model_birthtobacco)
# IMPORT CSV DATA
RPS <- read.csv("/Users/colleenmccamy/Documents/MEDS/classes/winter/eds241_policy/labs/RPS_data.csv")
# SUMMARY STATISTICS
stargazer(RPS, type="text", digits=2)
library(stargazer)
library(estimatr)
library(ggplot2)
library(plm)
library(lmtest)
library(dplyr)
# LIST SOME VARIABLES FOR CALIFORNIA
RPS%>%
filter(state_name == "California")%>%
select(state_name, year, rps_D, rps_ever_adopter, rps_implementation_year)%>%
View
library(stargazer)
library(estimatr)
library(ggplot2)
library(plm)
library(lmtest)
library(dplyr)
# SET WORKING DIRECTORY
# IMPORT CSV DATA
RPS <- read.csv("/Users/colleenmccamy/Documents/MEDS/classes/winter/eds241_policy/labs/RPS_data.csv")
# SUMMARY STATISTICS
stargazer(RPS, type="text", digits=2)
# LIST SOME VARIABLES FOR CALIFORNIA
RPS%>%
filter(state_name == "California")%>%
select(state_name, year, rps_D, rps_ever_adopter, rps_implementation_year)%>%
View
# CREATE "TREATED" times "POST" INDICATOR  (SAME AS RPS_D)
NEW_RPS_D = matrix(0, nrow(RPS), 1)
NEW_RPS_D = as.numeric((RPS$rps_ever_adopter==1) & (RPS$year>=RPS$rps_implementation_year))
cor(NEW_RPS_D, RPS$rps_D) # correlating the meand to show that they are identical
mean(RPS$rps_D)
mean(NEW_RPS_D)
# DD REGRESSION, Y = Wind+Solar installed capacity (MW), using lm package
DD_cap1 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
# heteroskedascity correction
# least squares regression
se_DD_cap1 <- starprep(DD_cap1, stat = c("std.error"), se_type = "HC2", alpha = 0.05)
DD_cap2 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap2 <- starprep(DD_cap2, stat = c("std.error"), se_type = "CR2", clusters=RPS$state_name, alpha = 0.05)
# cluster robust by state, doing it at the state level because that is the level that treatment varies
se_models <- list(se_DD_cap1[[1]], se_DD_cap2[[1]])
stargazer(DD_cap1, DD_cap2, se = se_models, keep=c("rps_D"), type="text")
# DD REGRESSION, Y = Wind+Solar installed capacity (MW), using plm package
DD_cap3 <- plm(cap_WS_mw ~ rps_D,
index = c("state_name", "year"), model = "within", effect = "twoways", data = RPS)
# designed to do two-way fixed effects; specified here for the two way dimensions with the RPS dummy and by default this will give you standard robust errors
# Calculate standard errors (note slightly different procedure with plm package)
se_DD_cap3 <- coeftest(DD_cap3, vcov = vcovHC(DD_cap3, type = "HC2"))[, "Std. Error"]
# Reformat standard errors for stargazer()
se_DD_cap3 <- list(se_DD_cap3)
# Output results with stargazer
stargazer(DD_cap3, keep=c("rps_D"), se = se_DD_cap3, type="text")
install.packages("renv")
setwd("~/Documents/MEDS/classes/spring/eds-213-data-management/bren-meds213-class-data/week4/exercise")
pqwd
pwd
print(wd)
library(sdcMicro)
install.packages("sdcMicro")
renv::snapshot()
library(sdcMicro)
renv::snapshot()
library(sdcMicro)
renv::snapshot()
renv::project()
??vegan
?vegan
lib.Paths()
.libPaths()
